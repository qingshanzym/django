"""
Django settings for dailyfresh project.

Generated by 'django-admin startproject' using Django 1.8.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
# 这个是项目路径。
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

import sys
# 把apps的路径插入到python查找路径的列表里。
sys.path.insert(1, os.path.join(BASE_DIR, 'apps'))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# 用celery_tasks异步发送激活邮件时候的加密方式（密文），也可以自己定义。
SECRET_KEY = '@k_7%dm=)xik75)7w8xbhid@71y)nzv8+lowf7n)u!mj7q-b0&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 自己每创建一个应用，都要在这个列表里添加，不然django识别不了。
    'df_user',
    'df_order',
    'df_goods',
    'df_cart',
    'tinymce',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'dailyfresh.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 模板加载路径。在views模块里写视图函数的时候，如果没有模板文件自动提示，可能问题就是出在模板路径不对这里了。
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dailyfresh.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        # 数据库基本配置。很简单。
        'NAME':'daily_fresh',
        'USER':'root',
        'PASSWORD':'mysql',
        'HOST':'localhost',
        'PORT':'3306',
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

# 汉化。
LANGUAGE_CODE = 'zh-Hans'

# 指定时区。 固定格式。
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

# 静态文件标识。意思为——碰到这个开头的路径，即说明此文件为静态文件。
STATIC_URL = '/static/'

# 静态文件加载路径。
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

# 用户权限配置。如果不配置此项，容易在项目中出现如下BUG：User.user_permissions错误。
AUTH_USER_MODEL = 'df_user.User'

# 以下是celery异步发送激活邮件的一些常规配置，会用即可，不必记住。
MAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 25
#发送邮件的邮箱
EMAIL_HOST_USER = 'qingshanzym@163.com'
#在邮箱中设置的客户端授权密码
EMAIL_HOST_PASSWORD = '19900522lzh'
#收件人看到的发件人
EMAIL_FROM = '天天生鲜<qingshanzym@163.com>'

# # 缓存
# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379/5",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
#     }
# }
#
# SESSION_ENGINE = "django.contrib.sessions.backends.cache"
# SESSION_CACHE_ALIAS = "default"

LOGIN_URL = '/user/login'

#指定保存文件的类，在这个类中，可以编写上传文件到Fdfs的代码
DEFAULT_FILE_STORAGE = 'utils.storage.FdfsStorage'
#指定fdfs文件服务器读取文件的路径
FDFS_SERVER='http://127.0.0.1:8888/'
#指定fdfs配置文件
FDFS_CLIENT=os.path.join(BASE_DIR,'utils/fdfs_client.conf')

#设置富文本编辑器的样式
TINYMCE_DEFAULT_CONFIG = {
  'theme': 'advanced', # 丰富样式
  'width': 600,
  'height': 400,
}